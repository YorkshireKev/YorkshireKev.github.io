<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Games on Kev&#39;s Site</title>
    <link>http://www.kevssite.com/categories/games/</link>
    <description>Recent content in Games on Kev&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.kevssite.com/categories/games/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CLI-Labyrinth</title>
      <link>http://www.kevssite.com/cli-labyrinth-game/</link>
      <pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/cli-labyrinth-game/</guid>
      <description>One of the very first games I ever played on a home computer was a maze game called Labyrinth on the Sinclair ZX81. So when I wanted to learn Golang and delve a little deeper into terminal cli development, I decided to start with a simple maze game that could be run in a shell on the Linux command line.&#xA;As you can see from the screenshot, the graphics could, at best, be describes as very basic.</description>
    </item>
    <item>
      <title>Godot Experiment no. 2, Central Cavern</title>
      <link>http://www.kevssite.com/central-cavern/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/central-cavern/</guid>
      <description>One of my all-time favourite games is Manic Miner on the ZX Spectrum. When Bug-Byte released Matthew Smith&amp;rsquo;s masterpiece in 1983 the bar was raised for quality gaming on the Speccy. Sure there were many, many excellent games released on the Spectrum (I&amp;rsquo;m looking at you Ultimate) but Manic Miner is still my go-to game when I need a retro gaming fix.&#xA;Ever since I saw Mario64 on the N64 I wondered what a 3D version of Manic Miner or Jet Set Willy would look and play like.</description>
    </item>
    <item>
      <title>Godot Experiment no. 1, Retrocadia</title>
      <link>http://www.kevssite.com/retrocadia/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/retrocadia/</guid>
      <description>Most of my recent (and not so recent) programming efforts have been in JavaScript that runs in the browser. I believed that with WebGL, the browser would become more relevant in gaming and graphics applications. Fast forward a few years and it&amp;rsquo;s clear that the vast majority of PC games are still downloaded and installed, just as they were decades ago.&#xA;I decided to return to creating native games for the PC.</description>
    </item>
    <item>
      <title>Retro Particle Demo</title>
      <link>http://www.kevssite.com/retro-particle-demo/</link>
      <pubDate>Sat, 21 Nov 2015 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/retro-particle-demo/</guid>
      <description>External page loaded from seperate github pages repo.</description>
    </item>
    <item>
      <title>Virtual Slot Machine</title>
      <link>http://www.kevssite.com/virtual-slot-machine/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/virtual-slot-machine/</guid>
      <description>External page loaded from seperate github pages repo.</description>
    </item>
    <item>
      <title>A look at Pixi.js</title>
      <link>http://www.kevssite.com/a-look-at-pixi-js/</link>
      <pubDate>Wed, 03 Jun 2015 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/a-look-at-pixi-js/</guid>
      <description>I&amp;rsquo;ve been experimenting with the html canvas element recently by writing some simple 2D games. One challenge is making a canvas based game fit nicely on the screen given the vast variety in browser resolutions. 2D games tend to be made up of images and I found that scaling these images so that they fill the browser window was both slow and ugly.&#xA;This got me thinking about WebGL. Is it possible to use a 3D WebGL library to render a 2D game and gain the scaling and performance advantages of the GPU?</description>
    </item>
    <item>
      <title>More adventures in JavaScript</title>
      <link>http://www.kevssite.com/more-adventures-in-javascript/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/more-adventures-in-javascript/</guid>
      <description>Having not written much client side JavaScript for at least a couple of years I thought I&amp;rsquo;d re-introduce myself to the language, and to the html5 canvas element.&#xA;I decided to spend a few hours building a html5 version of the old ZX Spectrum Classic, Lightcycles (1983), which itself was based on Tron. This isn&amp;rsquo;t exactly a faithful reproduction, it&amp;rsquo;s more inspired by my memory of the game than it is a conversion of it.</description>
    </item>
    <item>
      <title>Adventures in JavaScript Canvas</title>
      <link>http://www.kevssite.com/adventures-in-javascript-canvas/</link>
      <pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate>
      <guid>http://www.kevssite.com/adventures-in-javascript-canvas/</guid>
      <description>I&amp;rsquo;ve been reading a lot about HTML5 recently and it looks like the browser could soon become the dominant application platform. So, I thought I&amp;rsquo;d have a look at the new canvas element and delve into some JavaScript.&#xA;To get me started I&amp;rsquo;ve decided to write a (very) simple version of an old classic zx SpectrumÂ game: Jumping Jack.&#xA;At the time of writing this only works in browsers that support the new canvas html element.</description>
    </item>
  </channel>
</rss>
